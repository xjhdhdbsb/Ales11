from transformers import OpenAIGPTTokenizer, OpenAIGPTLMHeadModel
import torch
import warnings
warnings.filterwarnings("ignore")

class GPT1Chat:
    def __init__(self):
        print("ü§ñ –ó–∞–≥—Ä—É–∂–∞—é GPT-1...")
        self.tokenizer = OpenAIGPTTokenizer.from_pretrained("openai-gpt")
        self.model = OpenAIGPTLMHeadModel.from_pretrained("openai-gpt")
        self.model.eval()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        self.max_length = 100
        self.temperature = 0.8
        self.top_k = 50
        
        print("‚úÖ GPT-1 –≥–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é!")
        print("üí° –ö–æ–º–∞–Ω–¥—ã:")
        print("   /settings - –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        print("   /clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é")
        print("   /quit –∏–ª–∏ /exit - –≤—ã–π—Ç–∏")
        print("=" * 50)
        
        # –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        self.conversation_history = ""

    def generate_response(self, user_input):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç —Å –∏—Å—Ç–æ—Ä–∏–µ–π
            if self.conversation_history:
                prompt = f"{self.conversation_history}\nYou: {user_input}\nBot:"
            else:
                prompt = f"You: {user_input}\nBot:"
            
            # –¢–æ–∫–µ–Ω–∏–∑–∏—Ä—É–µ–º
            inputs = self.tokenizer.encode(prompt, return_tensors="pt")
            
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            if inputs.size(1) > 500:  # –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π
                inputs = inputs[:, -400:]  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 400 —Ç–æ–∫–µ–Ω–æ–≤
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º
            with torch.no_grad():
                outputs = self.model.generate(
                    inputs,
                    max_length=inputs.size(1) + 50,
                    temperature=self.temperature,
                    top_k=self.top_k,
                    do_sample=True,
                    pad_token_id=self.tokenizer.eos_token_id,
                    eos_token_id=self.tokenizer.eos_token_id,
                    no_repeat_ngram_size=2
                )
            
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
            full_response = self.tokenizer.decode(outputs[0], skip_special_tokens=True)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
            bot_response = full_response[len(self.tokenizer.decode(inputs[0], skip_special_tokens=True)):].strip()
            
            # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
            if "\nYou:" in bot_response:
                bot_response = bot_response.split("\nYou:")[0].strip()
            if "\nBot:" in bot_response:
                bot_response = bot_response.split("\nBot:")[0].strip()
            
            return bot_response if bot_response else "I don't understand. Could you rephrase?"
            
        except Exception as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {str(e)}"

    def show_settings(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        print(f"\n‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: {self.max_length}")
        print(f"   –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (–∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å): {self.temperature}")
        print(f"   Top-k —Å—ç–º–ø–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: {self.top_k}")
        print()

    def change_settings(self):
        """–ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        self.show_settings()
        
        try:
            new_temp = input("–ù–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (0.1-2.0, —Ç–µ–∫—É—â–∞—è {:.1f}): ".format(self.temperature))
            if new_temp.strip():
                self.temperature = max(0.1, min(2.0, float(new_temp)))
            
            new_length = input(f"–ù–æ–≤–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ (10-200, —Ç–µ–∫—É—â–∞—è {self.max_length}): ")
            if new_length.strip():
                self.max_length = max(10, min(200, int(new_length)))
            
            new_top_k = input(f"–ù–æ–≤—ã–π top-k (1-100, —Ç–µ–∫—É—â–∏–π {self.top_k}): ")
            if new_top_k.strip():
                self.top_k = max(1, min(100, int(new_top_k)))
            
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
            self.show_settings()
            
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω—ã.")

    def run_chat(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —á–∞—Ç–∞"""
        while True:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_input = input("\nüë§ –í—ã: ").strip()
                
                if not user_input:
                    continue
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
                if user_input.lower() in ['/quit', '/exit', 'quit', 'exit']:
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                
                elif user_input.lower() == '/clear':
                    self.conversation_history = ""
                    print("üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞!")
                    continue
                
                elif user_input.lower() == '/settings':
                    self.change_settings()
                    continue
                
                elif user_input.lower() == '/help':
                    print("üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
                    print("   /settings - –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
                    print("   /clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞")
                    print("   /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
                    print("   /quit –∏–ª–∏ /exit - –≤—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞")
                    continue
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                print("ü§ñ GPT-1 –¥—É–º–∞–µ—Ç...", end="", flush=True)
                response = self.generate_response(user_input)
                print(f"\rü§ñ GPT-1: {response}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
                self.conversation_history += f"\nYou: {user_input}\nBot: {response}"
                
                # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
                if len(self.conversation_history) > 1000:
                    # –û—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 800 —Å–∏–º–≤–æ–ª–æ–≤
                    self.conversation_history = self.conversation_history[-800:]
                
            except KeyboardInterrupt:
                print("\n\nüëã –ß–∞—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except Exception as e:
                print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
                print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /quit –¥–ª—è –≤—ã—Ö–æ–¥–∞.")

if __name__ == "__main__":
    chat = GPT1Chat()
    chat.run_chat()
